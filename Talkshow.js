// Generated by CoffeeScript 1.3.3
(function() {
  var Talkshow, setupUIDGenerator;

  setupUIDGenerator = function(storage, cb) {
    return storage.get("currId", function(err, doc) {
      var currId;
      currId = (doc != null ? doc.value : void 0) || 0;
      window.uniqueId = function(cb) {
        var ret;
        ret = currId;
        currId++;
        return storage.save("currId", {
          value: currId
        }, function(err) {
          return cb(err, ret);
        });
      };
      return cb(err);
    });
  };

  Talkshow = (function() {

    function Talkshow(cb) {
      var _this = this;
      this.storage = new LocalStorage;
      setupUIDGenerator(this.storage, function(err) {
        var grid, keyboardInput, myDataSource, rootNodeId, splitDataSource;
        if (err != null) {
          return cb("Failed to initialize UIDGenerator");
        }
        grid = new Grid(4, 2);
        _this.navigationController = new NavigationController(grid);
        rootNodeId = localStorage.getItem("root");
        console.log("rootNodeId", rootNodeId);
        myDataSource = new DataSource({
          grid: grid,
          level: 1,
          nodeId: rootNodeId,
          delegate: _this
        });
        _this.yesNoDataSource = new DataSource({
          grid: grid,
          level: 1,
          nodeId: "yes_no"
        });
        splitDataSource = new SplitDataSource(_this.yesNoDataSource, myDataSource, 1);
        _this.navigationController.push(splitDataSource);
        keyboardInput = KeyboardInput.get(_this);
        return cb(null);
      });
    }

    Talkshow.prototype.enterCell = function(x, y) {
      return this.navigationController.currentController().enterCell(x, y);
    };

    Talkshow.prototype.pop = function() {
      if (this.navigationController.count() > 1) {
        return this.navigationController.pop();
      }
    };

    Talkshow.prototype.enteredCell = function(dataSource, position, level, nodeId) {
      var myDataSource, splitDataSource;
      console.log("enteredCell " + position.x + "/" + position.y + " level: " + level + " nodeId: " + nodeId);
      myDataSource = new DataSource({
        grid: this.grid,
        level: level,
        nodeId: nodeId,
        parent: dataSource,
        position: position,
        delegate: this
      });
      splitDataSource = new SplitDataSource(this.yesNoDataSource, myDataSource, 1);
      return this.navigationController.push(splitDataSource);
    };

    return Talkshow;

  })();

  window.Talkshow = Talkshow;

}).call(this);
