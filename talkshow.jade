!!!
html
    head
        meta(http-equiv="Content-Type", content="text/html;charset=UTF-8")
        script(src='jquery.min.js')
        script(src='underscore.js')
        script(src='grid.js')
        script(src='scanner.js')
        script(src='navigation.js')
        script(src='genericdatasource.js')
        
    body
        h1 Talkshow.js
        #grid
        #horiz.pointer ⬇
        #vert.pointer ➨

        
:stylus
    body
        background-color: #f4f4ed
        font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif 
        line-height: 160%
        text-shadow: 1px 1px 2px rgba(0,0,0,0.2)
        color: #666
    
    h1
        background-color: #555
        font-size: 40pt
        margin: 0px 20px
        color: #aaa
    
    #grid
        margin: 50px 50px
        height:800px
        background-color: rgba(0,0,0,0.1)

    .pointer
        position: absolute
        font-size: 50pt
        
    table
        width: 100%
        height: 100%
        table-layout: fixed
        border-spacing: 25px
        
    td
        font-size:28pt
        font-weight: 800
        vertical-align: middle
        text-align: center
        border-collapse: collapse
        -webkit-border-radius: 32px
        border: 4px solid rgba(255,255,255,0.2)
        -webkit-box-shadow: 2px 2px 8px rgba(0,0,0,0.3), inset -1px -4px 32px rgba(0,0,0,0.8), inset 1px 4px 16px white
        background-image: -webkit-linear-gradient(bottom, rgba(99,99,99,0.1) 54%, rgba(210,210,210,0.1) 55%, rgb(220,220,220,0.1) 85%);
        background-repeat: no-repeat
        background-position: center 25px
     
     td.dragTarget
        border: 4px dotted white
     
    .current_horiz, .current_vert
       -webkit-box-shadow inset 0px 0px 20px 30px #ddd
     
    .current_horiz
       background-color: #99a !important

    .current_vert
        background-color: #9a9 !important

    .current_horiz.current_vert, td:hover, .keyboardFocus
        background-color: white !important
        -webkit-box-shadow inset 0px 0px 20px 30px yellow


script
    $(function() {
        var grid = Grid(4, 3);

        var navigationController = NavigationController(grid);
        var navigationDataSource = NavigationDataSource(navigationController);
    
        var myDataSource = GenericDataSource(grid, navigationDataSource, navigationController);

        navigationController.push(myDataSource);
        console.log(grid.positions());
        
        
        // drag and drop
        $("#grid td").live("dragenter", function(evt) {
            $(this).addClass("dragTarget");
            evt.stopPropagation();
            evt.preventDefault();
            return true;
        });
        $("#grid td").live("dragleave", function(evt) {
            $(this).removeClass("dragTarget");
            evt.stopPropagation();
            evt.preventDefault();
            return true;
        });
        $("#grid td").live("dragover", function(evt) {
            evt.stopPropagation();
            evt.preventDefault();
            //evt.dataTransfer.dropEffect = 'link';
        });
        $("#grid td").live("drop", function(evt) {
            var cell = $(this);
            evt.stopPropagation();
            evt.preventDefault();
            var files = evt.originalEvent.dataTransfer.files;
            _(files).each(function(file) {
                console.log(file.type);
                console.log(file.mozFullPath);
                var reader = new FileReader();
                reader.onloadend = function() {
                    var dataUri = reader.result;
                    console.log(dataUri)
                    cell.css("background-image", "url(" + dataUri + ")");
                };
                reader.readAsDataURL(file);
                
            });
        });
        
        
        var delegate = {
            enterCell: function(x,y) {
                return navigationController.currentController().enterCell(x,y);
            }
        };
        
        var scanner = Scanner(grid.positions(), delegate);

        function enter() {
            var focusPos = focusPosition();
            if (focusPos !== null) {
                delegate.enterCell(focusPos.left, focusPos.top)
            }
        }
        
        function focusPosition() {
            if ($(".keyboardFocus").length == 1) {
                var cell = $(".keyboardFocus");
                var row = cell.closest("tr");
                var x = cell.index();
                var y = row.index();
                return {
                    left: x,
                    top: y
                };
            } else {
                return null;
            }
        }
        
        function move(dx, dy) {
            if ($(".keyboardFocus").length == 0) {
                // if no cell has the keyboard focus
                // focus on the center cell
                var rows = $("#grid tr");
                var row = rows.eq(Math.floor(rows.length / 2));
                var cells = row.find("td");
                var cell = cells.eq(Math.floor(cells.length / 2));
                cell.addClass("keyboardFocus");
            } else {
                var focusPos = focusPosition();
                var x = focusPos.left;
                var y = focusPos.top;
                //console.log(x,y);
                x += dx; y += dy;
                $("td").removeClass("keyboardFocus");
                $("#grid tr").eq(y).find("td").eq(x).addClass("keyboardFocus");
            }
        
        }
        
        $(window).keyup(function(e) {
            //console.log(e.keyCode);
            switch(e.keyCode) { 
                case 37: // left
                    move(-1,0);
                    break;
                case 38: // up
                    move(0,-1);
                    break;
                case 39: // right
                    move(1,0);
                    break;
                case 40: // down
                    move(0,1);
                    break;
                case 13:
                    enter();
                    break;
                case 32:
                    scanner.advance();
            dafault:
                return true;
            }
            return false;
        });
        
    });
    
