!!!
html
    head
        meta(http-equiv="Content-Type", content="text/html;charset=UTF-8")
        script(src='jquery.min.js')
        script(src='underscore.js')

    body
        h1 Talkshow.js
        #grid
        #horiz.pointer ⬇
        #vert.pointer ➨

        
:stylus
    body
        background-color: #f4f4ed
        font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif 
        line-height: 160%
        text-shadow: 1px 1px 2px rgba(0,0,0,0.2)
        color: #666
    
    h1
        background-color: #555
        font-size: 40pt
        margin: 0px 20px
        color: #aaa
    
    #grid
        margin: 50px 50px
        height:800px
        background-color: rgba(0,0,0,0.1)

    .pointer
        position: absolute
        font-size: 50pt
        
    table
        width: 100%
        height: 100%
        table-layout: fixed
        border-spacing: 25px
        
    td
        font-size:28pt
        font-weight: 800
        vertical-align: middle
        text-align: center
        border-collapse: collapse
        -webkit-border-radius: 32px
        border: 4px solid rgba(255,255,255,0.2)
        -webkit-box-shadow: 2px 2px 8px rgba(0,0,0,0.3), inset -1px -4px 32px rgba(0,0,0,0.8), inset 1px 4px 16px white
        background-image: -webkit-linear-gradient(bottom, rgba(99,99,99,0.1) 54%, rgba(210,210,210,0.1) 55%, rgb(220,220,220,0.1) 85%);
     
    .current_horiz, .current_vert
       -webkit-box-shadow inset 0px 0px 20px 30px #ddd
     
    .current_horiz
       background-color: #99a !important

    .current_vert
        background-color: #9a9 !important

    .current_horiz.current_vert
        background-color: white !important
        -webkit-box-shadow inset 0px 0px 20px 30px yellow


script
    $(function() {
        var positions = buildTable(4,3);
        console.log(positions)
        $("#vert").css("left", "0px");
        $("#vert").css("top", $("#grid").offset().top - 10 + "px");

        $("#horiz").css("top", $("#grid").offset().top -40 + "px");
        $("#horiz").css("left", $("#grid").offset().left -32 + "px");

        var scannerStates = ["hold", "vert", "horiz"];
        var scannerState = 0;
                            
        var animOptions = {
            duration: 5000,
            easing: "linear",
            step: function(now, fx) {
                var axis = fx.elem.id;
                if (axis !== scannerStates[scannerState]) {
                    return;
                }
                var offsets = positions[axis];
                var klass = "current_" + axis;
                // find the index of the cell the poihnter points to
                var index = 0;
                while (now > offsets[index] && index < offsets.length) index++;
                $("#grid table tr td").removeClass(klass);
                if (axis === "horiz") {
                    $("#grid table tr td:nth-child("+index+")").addClass(klass);
                } else {
                    $("#grid table tr").eq(index-1>0?index-1:0).find("td").addClass(klass);
                
                }
            }
        };
        
        function animate(axis, animOptions) {
            $('#'+axis).show();
            var propNames = {
                horiz: "left",
                vert: "top"
            }
            var value = axis === "horiz" ?  
                $("#grid").width() : $("#grid").height();
            props = {};
            props[propNames[axis]] = "+=" + value;
            
            $('#'+axis).animate(props, animOptions);

            props[propNames[axis]] = "-=" + value;

            var animOptions2 = _.clone(animOptions);
            animOptions2.complete = function() {
                //$("td").removeClass("current_"+axis);
                //$('#'+axis).hide();
            };

            $('#'+axis).animate(props, animOptions2);
        }
        
        function advanceScannerState() {
            var old = scannerState;
            
            var i = (scannerState + 1) % scannerStates.length;
            
            if (old !== 0) {
                $("#"+scannerStates[old]).hide();
            } else {
            }
            if (i !== 0) {
                animate(scannerStates[i], animOptions);
            } else {
                $("td").removeClass("current_vert");
                $("td").removeClass("current_horiz");
                // open!
            }
            scannerState = i;
        }
        
        $(window).keyup(function() {
            advanceScannerState();
        });
                
    });
    
    function makeColor(x, y) {
        var index = x+y*4 % 6 + 1;
        var color = index.toString(2);
        color = "000".substr(0,3-color.length) + color;
        color = color.replace(/1/g, "255,").replace(/0/g, "112,");
        color += ".3"; // alpha
        color = "rgba(" + color + ")";
        return color;
    }
    
    function buildTable(cols, rows) {
        $("#grid").html("<table>");
        var x, y;
        for(y=0;y<rows;++y) {
            var tr = $("<tr>");
            for(x=0;x<cols;++x) {
                tr.append(
                    $("<td>")
                        .html(x + " / " + y)
                        .css("background-color", makeColor(x,y))
                );
            }
            $("#grid table").append(tr);
        }
        var positions = {
            vert: [],
            horiz: []
        };
        for(y=0;y<rows;++y) {
            positions.vert.push($("#grid table tr").eq(y).offset().top);
        }
        for(x=0;x<cols;++x) {
            positions.horiz.push($("#grid table tr").eq(0).find("td").eq(x).offset().left);
        }
        return positions;
    }
    
