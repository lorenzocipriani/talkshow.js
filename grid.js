// Generated by CoffeeScript 1.3.3
(function() {
  var Grid;

  Grid = (function() {

    function Grid(cols, rows, dataSource) {
      this.cols = cols;
      this.rows = rows;
      this.dataSource = dataSource;
      this.positions = {
        vert: [],
        horiz: []
      };
    }

    Grid.prototype.reloadFromDataSource = function(dataSource) {
      var td, tr, x, y, _fn, _i, _j, _k, _l, _ref, _ref1, _ref2, _ref3, _results;
      console.log("Loading data from source");
      this.dataSource = dataSource;
      $("#grid").html("<table>");
      for (y = _i = 0, _ref = this.rows; 0 <= _ref ? _i < _ref : _i > _ref; y = 0 <= _ref ? ++_i : --_i) {
        tr = $("<tr>");
        _fn = function(td) {
          var _this = this;
          return dataSource.cellForPosition(x, y, function(err, newTd) {
            if (!(err != null)) {
              return td.replaceWith(newTd);
            }
          });
        };
        for (x = _j = 0, _ref1 = this.cols; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; x = 0 <= _ref1 ? ++_j : --_j) {
          td = $("<td>");
          tr.append(td);
          _fn(td);
        }
        $("#grid table").append(tr);
      }
      for (y = _k = 0, _ref2 = this.rows; 0 <= _ref2 ? _k < _ref2 : _k > _ref2; y = 0 <= _ref2 ? ++_k : --_k) {
        this.positions.vert.push($("#grid table tr").eq(y).offset().top);
      }
      _results = [];
      for (x = _l = 0, _ref3 = this.cols; 0 <= _ref3 ? _l < _ref3 : _l > _ref3; x = 0 <= _ref3 ? ++_l : --_l) {
        _results.push(this.positions.horiz.push($("#grid table tr").eq(0).find("td").eq(x).offset().left));
      }
      return _results;
    };

    Grid.prototype.zoomIntoCell = function(x, y, cb) {
      return cb();
    };

    return Grid;

  })();

  window.Grid = Grid;

}).call(this);
